#!/usr/bin/python

from Crypto.PublicKey import RSA
from fractions import gcd
import gmpy

p = long(165496247436666790176644765450146822175238160321715295438224142061506544367523569093501025581265148522515911545522516334416008202505578645693393969776575527113088596739731879688745300711275501631413633830292363304950267213188283170437974782399925718620207252042152817614102396722040293599511876723055126431297)

q = long(172843236782782894775242174425482199225662999034227337066715380828301431226860628018223276607609396125109893659339063744320238109537353962290920204393020892616343596012988637012116405051022753833961405337753215882631910970812354386000809274828899211116773063488392562730725564517340380403647420455477343411533)

n = p * q

e = long(65537)
d = long(gmpy.invert(e, (p-1) * (q-1)))



private_key = RSA.construct((n, e, d, p, q))
open("private_key.pem", 'w').write(private_key.exportKey('PEM'))
